# 日志信息冗余,默认false,级别有 vv~vvvvv,v越多级别越高,在日志文件中记录的信息越详细
verbose = true
vvvv = true
# 端口,默认27017,端口设置小于1024,则需要root权限启动
port = 27017
# 绑定地址,默认127.0.0.1,需要给其他服务器连接,则需要注释掉这个或则把IP改成本机地址,如192.168.200.201
# [其他服务器用 mongo --host=192.168.200.201 连接],可以用一个逗号分隔的列表绑定多个IP地址
bind_ip = 127.0.0.1
# 最大连接数,默认值取决于系统（即的ulimit和文件描述符）限制,设置该值的高于连接池和总连接数的大小,以防止尖峰时候的连接
# 注意：不能设置该值大于20000
maxConns = 100
# 指定日志文件,该文件将保存所有的日志记录,诊断信息
logpath = /var/log/mongodb/mongodb.log
# 写日志的模式,设置为true为追加,默认是覆盖
logappend = true
# 日志输出都发送到主机的syslog系统,syslog和logpath不能一起用,会报错
syslog = true
# 进程ID,没有指定则启动时候就没有PID文件,默认缺省
pidfilepath = /var/run/mongo.pid
# 指定存储身份验证信息的密钥文件的路径,默认缺省
keyFile = /srv/mongodb/keyfile
# 套接字文件,默认为false,有生成socket文件,当设置为true时,不会生成socket文件
nounixsocket = false
# 套接字文件路径,默认/tmp
unixSocketPrefix = /tmp
# 是否后台运行,设置为true 启动进程在后台运行的守护进程模式,默认false
fork = true
# 用户认证,默认false,不需要认证
auth = true
# 禁止用户认证,默认true
noauth = true
# 默认为false,设置为true会强制mongodb每4s报告cpu利用率和io等待,把日志信息写到标准输出或日志文件
cpu = true
# 数据存放目录,默认:/data/db/
dbpath = /var/lib/mongodb
# 创建一个非常详细的故障排除和各种错误的诊断日志记录,默认0,值如下：
# 0 off. No logging. #关闭。没有记录。
# 1 Log write operations. #写操作
# 2 Log read operations. #读操作
# 3 Log both read and write operations. #读写操作
# 7 Log write and some read operations. #写和一些读操作
# 设置不等于0,日志会每分钟flush一次：
# 产生的日志可以用mongosniff来查看：要是mongosniff[类似于tcpdump的作为一个MongoDB的特定的TCP/IP网络流量]
#     apt-get install libpcap-dev
#     mongosniff --source DIAGLOG diaglog.51b542a9
# 注意：当重新设置成0,会停止写入文件,但mongod还是继续保持打开该文件,即使它不再写入数据文件
#      如果你想重命名,移动或删除诊断日志,你必须完全关闭mongod实例
diaglog = 3
# 默认为false,设置为true,修改数据目录存储模式,每个数据库的文件存储在DBPATH指定目录的不同的文件夹中
directoryperdb = ture
# 设置为true,启用操作日志,以确保写入持久性和数据的一致性,会在dbpath目录下创建journal目录
# 设置为false,以防止日志持久性的情况下,并不需要开销
# 为了减少磁盘上使用的日志的影响,您可以启用nojournal,并设置为true
# 默认值:（在64位系统）true
# 默认值:（32位系统）false
# 注意：在64位系统上禁用日志必须使用带有nojournal的。
journal = false
# 默认值:（在64位系统）false
# 默认值:（32位系统）true
# 设置nojournal为true关闭日志,64位,2.0版本后的mongodb默认是启用journal日志。
nojournal = true
# 刷写提交机制,默认是30ms或100ms,接受2和300毫秒之间的值
# 如果单块设备提供日志和数据文件，默认的日记提交时间间隔为100毫秒。
# 如果不同的块设备提供的日志和数据文件，默认的日记提交的时间间隔为30毫秒。
journalCommitInterval = 100
# 是否支持ipv6,默认false。
ipv6 = false
# 是否允许JSONP访问通过一个HTTP接口,默认false
jsonp = false
# 是否禁止http接口,即28017端口开启的服务,默认false,支持。
nohttpinterface = false
# 预分配方式,默认false：使用预分配方式来保证写入性能的稳定,预分配在后台进行,并且每个预分配的文件都用0进行填充
# 设置noprealloc=true来禁用预分配的数据文件,会缩短启动时间,但在正常操作过程中,可能会导致性能显著下降
noprealloc = false
# 是否禁止脚本引擎,默认是false:不禁止 ture:禁止
noscripting = false
# 是否禁止表扫描操作,默认false:不禁止 ture:禁止
notablescan = false
# 命名空间的文件（即NS）的默认大小,单位为MB,默认16M,最大2G
nssize = 16
# 数据库分析等级设置,默认0:关闭
# 级别 设置
# 0   关,无分析。
# 1   开,仅包括慢操作。
# 2   开,包括所有操作。
profile = 2
# 记录profile分析的慢查询的时间,默认是100毫秒
slowms = 200
# 配额,默认false,是否开启配置每个数据库的最多文件数的限制
quota = true
# 配额数量,每个数据库的数据文件数量的限制,默认为8
quotaFiles = 8
# 默认false,设置为true,使一个简单的 REST API
# 设置为true,开启后,在MongoDB默认会开启一个HTTP协议的端口提供REST的服务（nohttpinterface=false）
# 这个端口是你Server端口加上1000,即28017
# 默认的HTTP端口是数据库状态页面,（开启后,web页面的Commands行中的命令都可以点进去）
# mongodb自带的REST,不支持增、删、改,同时也不支持权限认证
rest = true
# 修复数据库操作,默认是false
# 启动时修复,需要关闭journal
repair = true
# 修复路径,默认是在dbpath路径下的_tmp目录。
repairpath = /tmp
# 是否使用较小的默认文件,默认为false,不使用
# 设置为true,使用较小的默认数据文件大小,smallfiles减少数据文件的初始大小,并限制他们到512M,也减少了日志文件的大小,并限制他们到128M
# 如果数据库很大,各持有少量的数据,会导致mongodb创建很多文件,会影响性能
smallfiles = true
# 刷写数据到日志的频率,通过fsync操作数据,默认60秒
# 默认就可以,不需要设置,不会对日志文件（journal files）有影响
# 警告：如果设置为0,SYNCDELAY不会同步到磁盘的内存映射文件,在生产系统上,不要设置这个值
syncdelay = 60
# 系统信息,默认false
# 设置为true,mongod会诊断系统有关的页面大小,数量的物理页面,可用物理页面的数量输出到标准输出。
# 要关闭该参数,才能开启mongodb
sysinfo = false
# 升级,默认为false
# 当设置为true,指定DBPATH,升级磁盘上的数据格式的文件到最新版本,会影响数据库操作,更新元数据,大部分情况下,不需要设置该值
upgrade = false
# 是否使用内部诊断,默认false
traceExceptions = false
# 安静模式
quiet = true
# 指定启动选项配置,想设置多个选项则用一个setParameter选项指定,setParameter设置在这个文件中
setParameter = syncdelay= 55,notablescan = true,journalCommitInterval = 50,traceExceptions = true
# -------------- Replication Options复制选项 ----------------
# 使用此设置来配置复制副本集,指定一个副本集名称作为参数,所有主机都必须有相同的名称作为同一个副本集
replSet = test123
# 指定的复制操作日志（OPLOG）的最大大小,单位为MB,对于64位系统，OPLOG通常是5％的可用磁盘空间
oplogSize = 64
# 默认为false
# 在副本集下,设置为true,从一个dbpath里启用从库复制服务,该dbpath的数据库是主库的快照,可用于快速启用同步,否则的mongod将尝试执行初始同步
# 注意：如果数据不完全同步,mongod指定fastsync开启,secondary或slave与主永久不同步,这可能会导致显着的一致性问题
fastsync = true
# 默认是all,可以设置的值有：all, none, and_id_only,只能在副本集（replSet）中使用
# 默认情况下,secondary副本集的成员将加载所有索引到内存中（从OPLOG之前的操作有关的）
replIndexPrefetch = all
# ----------------- Master/Slave Replication：主从复制的相关设置 ----------------------
# 默认为false,当设置为true,则配置当前实例作为主实例
master = true
# 默认为false,当设置为true,则配置当前实例作为从实例。
slave = true
# 默认为空,用于从实例的复制,设置从的时候指定该选项会让从复制指定主的实例
source = 127.0.0.1:30001
# 默认为空,用于从选项,指定一个数据库进行复制。
only = abc
# 设置从库同步主库的延迟时间,单位为秒,用于从设置,默认为0
slavedelay = 60
# 默认为false,用于从设置,是否自动重新同步
# 设置为true,如果落后主超过10秒,会强制从自动重新同步
# 设置为false,10分钟内从不会进行大于1次的自动重新同步
autoresync = false
# --------------------- Sharding(分片)选项 ------------------------
# 声明这是一个集群的config服务,默认端口27019，默认目录/data/configdb
–configsvr
# 声明这是一个集群的分片,默认端口27018
–shardsvr
# 关闭偏执为moveChunk数据保存
–noMoveParanoia